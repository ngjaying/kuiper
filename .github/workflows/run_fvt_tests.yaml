name: Run fvt tests

concurrency:
  group: fvt-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - "*"
  pull_request:
  release:
    types:
      - published

jobs:
  fvt_tests_with_edgex:
    runs-on: ubuntu-latest

      # Service containers to run with `runner-job`
    services:
        # Label used to access the service container
      redis:
          # Docker Hub image
        image: redis
          # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
            # Maps port 6379 on service container to the host
          - 6379:6379
      emqx:
        image: emqx/emqx:4.3.10
        ports:
          - 1883:1883
          - 18083:18083

    steps:
    - uses: actions/setup-go@v1
      with:
        go-version: '1.16'
    - uses: actions/setup-java@v1
      with:
        java-version: '8' # The JDK version to make available on the path.
        java-package: jdk # (jre, jdk, or jdk+fx) - defaults to jdk
        architecture: x64 # (x64 or x86) - defaults to x64
    - uses: actions/setup-python@v2  # For the test of python portable plugin
      with:
        python-version: '3.x'
        architecture: 'x64'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pynng
    - name: install jmeter
      timeout-minutes: 10
      env:
          JMETER_VERSION: 5.3
      run: |
        wget --no-check-certificate -O /tmp/apache-jmeter.tgz https://downloads.apache.org//jmeter/binaries/apache-jmeter-$JMETER_VERSION.tgz
        cd /tmp && tar -xvf apache-jmeter.tgz
        echo "jmeter.save.saveservice.output_format=xml" >> /tmp/apache-jmeter-$JMETER_VERSION/user.properties
        echo "jmeter.save.saveservice.response_data.on_error=true" >> /tmp/apache-jmeter-$JMETER_VERSION/user.properties
        wget -O /tmp/apache-jmeter-$JMETER_VERSION/lib/ext/mqtt-xmeter-1.13-jar-with-dependencies.jar https://github.com/emqx/mqtt-jmeter/raw/master/Download/v1.13.0/mqtt-xmeter-1.13-jar-with-dependencies.jar
        ln -s /tmp/apache-jmeter-$JMETER_VERSION /opt/jmeter
    - uses: actions/checkout@v2
    - name: build kuiper
      run: |
        sudo apt update && sudo apt install pkg-config libczmq-dev -y
        make build_with_edgex
        go build -trimpath -modfile extensions.mod --buildmode=plugin -o plugins/sources/Zmq.so extensions/sources/zmq/zmq.go
        go build -trimpath -modfile extensions.mod --buildmode=plugin -o plugins/functions/Image.so extensions/functions/image/*.go
    - name: run edgex && kuiper
      env:
        KUIPER__PORTABLE__PYTHONBIN: "/opt/hostedtoolcache/Python/3.10.0/x64/bin/python"
      run: |
        ./test/setup_env.sh
        ln -s _build/kuiper-$(git describe --tags --always)-$(uname -s | tr "[A-Z]" "[a-z]")-amd64/log kuiper_logs
    - name: run fvt tests
      timeout-minutes: 8
      run: ./test/run_jmeter.sh with_edgex=true
    - uses: actions/upload-artifact@v1
      if: always()
      with:
        name: kuiper_logs_with_edgex
        path: ./kuiper_logs
    - uses: actions/upload-artifact@v1
      if: always()
      with:
        name: jmeter_logs_with_edgex
        path: ./jmeter_logs
    - name: check logs
      run: |
        sudo apt update && sudo apt install -y libxml2-utils
        cd jmeter_logs
        if [ ! -z "$(cat *.jtl| grep '<failure>' | awk -F '>' '{print $2}' | awk -F '<' '{print $1}' | grep true)" ] ||
           [ "$(xmllint --format --xpath '/testResults/sample/@rc' $(ls *.jtl) | sed -r 's/ /\n/g;' | sort -u | grep -E 'rc=\"[45][0-9][0-9]\"|rc=\"\"')" != "" ]; then
            echo -e "---------------------------------------------\n"
            echo "FVT tests error"
            exit 1
        fi